Parsed:
----------------------------------------------------------------------
"NON-TERMINAL define_term"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
  define AlwaysTrue() true;
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
  define AlwaysTrue() true;
  return true;
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
  define AlwaysTrue() false;
  return true;
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
  define AlwaysTrue() true;
  return AlwaysTrue ();
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
  define comparison(boolean maximum, integer Int1, integer Int2) ``{
  if ((maximum == true)) {
  if ((Int1 >= Int2)) {
  return Int1;
}
 else {
  return Int2;
}
}
 else {
  if ((Int1 <= Int2)) {
  return Int1;
}
 else {
  return Int2;
}
}
}
;
  if (((comparison (true, 5, 7) == comparison (true, 7, 5)) && (comparison (false, 5, 7) == comparison (false, 7, 5)))) {
  return true;
}
  return false;
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
  define comparison() ``{
  if ((maximum == true)) {
  if ((Int1 >= Int2)) {
  return Int1;
}
 else {
  return Int2;
}
}
 else {
  if ((Int1 <= Int2)) {
  return Int1;
}
 else {
  return Int2;
}
}
}
;
  boolean `maximum = true;
  if ((maximum == true)) {
  integer `Int1 = 5;
  integer `Int2 = 7;
  if ((Int1 <= Int2)) {
  integer `Int1 = 6;
  integer `Int2 = 8;
  return (comparison () == 8);
}
}
  return false;
}
----------------------------------------------------------------------
