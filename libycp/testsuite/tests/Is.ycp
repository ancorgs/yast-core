
# ---------------------------------------------------------
#
#  Filename:    Builtin_is.ycp
#
#  Purpose:     test cases for YCP "is"
#
#  Creator:     jd@suse.de
#
#  Maintainer:  jd@suse.de
#
# ---------------------------------------------------------


// Checks if the value complies to a declaration .
// A special case is to check for a certain type.

( is( nil, void ) )
( is( a, string ) )
( is( true, boolean ) )
( is( false, boolean ) )
( is( 17, integer ) )
( is( -4, integer ) )
( is( -0, integer ) )
( is( ( 33 % 3 ), integer ) )
( is( 8.0, float ) )
( is( .8, float) == false )
{ 
  list x = [ 0 ];

  return is( x, any ); 
}
( is( `x, symbol ) )
( is( "string" + ., string ) )
( is( [ true, 8 ], list ) )
( is( [ true, 8 ], [ boolean a, integer b ] ) )
( is( [ true ], [ boolean a ] ) )
( is( $[ 8 : true ], map ) )
( is( { return; }, void ) )
( is( ``{ return; }, block ) )
( is( ., path ) )
( is( ._.i_, path ) )
// ( is( $[ 8 : true ], $[ boolean a: integer b ] ) )  // not implemented
// is(, declaration not implemented

( is( false, void ) == false )
( is( -0, string ) == false )
( is( `name, symbol ) == true )
( is( ``(`name()), symbol ) == false )
( is( ``(name()), term ) == true )
( is( ``(`name()), term ) == true )
( is( ``(name), any ) == true )
( is( `string, string ) == false )
( is( $[ 8 : true ], [ boolean a, integer b ] )  == false )  // not a list
( is( { return; }, block ) == true )		// block will _NOT_ be evaluated
