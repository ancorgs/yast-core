Parsed:
----------------------------------------------------------------------
(select ([1, 2, 3], 1, nil) == 2)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
  list `node1 = [1, 2];
  list `node2 = [3, 4];
  list `node3 = [5, 6];
  list `node4 = [node2, node3];
  list `node5 = [node1, node4];
  list `node6 = [7];
  list `node7 = [node5, node6];
  return ((select (node7, 0, nil) == node5) && (node7[0]:nil == node5));
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
  list `node1 = [1, 2];
  list `node2 = [3, 4];
  list `node3 = [5, 6];
  list `node4 = [node2, node3];
  list `node5 = [node1, node4];
  list `node6 = [7];
  list `node7 = [node5, node6];
  return ((select (select (node7, 0, nil), 1, nil) == node4) && (node7[0, 1]:nil == node4));
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
  list `node1 = [1, 2];
  list `node2 = [3, 4];
  list `node3 = [5, 6];
  list `node4 = [node2, node3];
  list `node5 = [node1, node4];
  list `node6 = [7];
  list `node7 = [node5, node6];
  return ((select (select (select (node7, 0, nil), 1, nil), 0, nil) == node2) && (node7[0, 1, 0]:nil == node2));
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
  list `node1 = [1, 2];
  list `node2 = [3, 4];
  list `node3 = [5, 6];
  list `node4 = [node2, node3];
  list `node5 = [node1, node4];
  list `node6 = [7];
  list `node7 = [node5, node6];
  return ((select (select (select (select (node7, 0, nil), 1, nil), 1, nil), 1, nil) == 6) && (node7[0, 1, 1, 1]:nil == 6));
}
----------------------------------------------------------------------
