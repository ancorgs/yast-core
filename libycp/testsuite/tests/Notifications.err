Parsed:
----------------------------------------------------------------------
"NON-TERMINAL YCP_DeclTerm"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
Symbol0002 ()
----------------------------------------------------------------------
[Interpreter] tests/Notifications.ycp:0 Undefined function Symbol0002()
[Scanner] tests/Notifications.ycp:24 Syntax error: bad octal constant
Parsed:
----------------------------------------------------------------------
"Hello world"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((([5] + [6]) == [5, 6]) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((($[1:"Paris"] + $[2:"London"]) == $[1:"Paris", 2:"London"]) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
  `ComposedString = ("composed");
  return (d + " string");
}
----------------------------------------------------------------------
[Interpreter] tests/Notifications.ycp:39 [YCP] Assignment not possible: variable ComposedString is not declared
[Interpreter] tests/Notifications.ycp:39 [YCP] Undeclared variable d
Parsed:
----------------------------------------------------------------------
{
  string `OuterString = "outer string";
  if (true) {
  string `InnerString = "inner";
  `InnerString = ((InnerString + " string"));
}
  return InnerString;
}
----------------------------------------------------------------------
[Interpreter] tests/Notifications.ycp:54 [YCP] Undeclared variable InnerString
Parsed:
----------------------------------------------------------------------
{
  if (nil) {
  return "Condition is nil";
}
}
----------------------------------------------------------------------
[YCP] tests/Notifications.ycp:60 condition nil in if statement evaluates to nil, but only true and false are allowed
Parsed:
----------------------------------------------------------------------
{
  if ((7 + 5)) {
  return "Condition is integer";
}
}
----------------------------------------------------------------------
[YCP] tests/Notifications.ycp:61 condition (7 + 5) in if statement evaluates to 12, but only true and false are allowed
Parsed:
----------------------------------------------------------------------
{
  if (7.50000000000000) {
  return "Condition is float";
}
}
----------------------------------------------------------------------
[YCP] tests/Notifications.ycp:62 condition 7.50000000000000 in if statement evaluates to 7.50000000000000, but only true and false are allowed
Parsed:
----------------------------------------------------------------------
{
  if ("true") {
  return "Condition is string";
}
}
----------------------------------------------------------------------
[YCP] tests/Notifications.ycp:63 condition "true" in if statement evaluates to "true", but only true and false are allowed
Parsed:
----------------------------------------------------------------------
{
  if (.) {
  return "Condition is path";
}
}
----------------------------------------------------------------------
[YCP] tests/Notifications.ycp:65 condition . in if statement evaluates to ., but only true and false are allowed
Parsed:
----------------------------------------------------------------------
{
  if ([true]) {
  return "Condition is list";
}
}
----------------------------------------------------------------------
[YCP] tests/Notifications.ycp:66 condition [true] in if statement evaluates to [true], but only true and false are allowed
Parsed:
----------------------------------------------------------------------
{
  if ($["true":true]) {
  return "Condition is map";
}
}
----------------------------------------------------------------------
[YCP] tests/Notifications.ycp:68 condition $["true":true] in if statement evaluates to $["true":true], but only true and false are allowed
Parsed:
----------------------------------------------------------------------
{
  list `node1 = [1, 2];
  list `node2 = [3, 4];
  list `node3 = [5, 6];
  list `node4 = [node2, node3];
  list `node5 = [node1, node4];
  list `node6 = [7];
  list `node7 = [node5, node6];
  return (select (node7, -1, nil) == nil);
}
----------------------------------------------------------------------
