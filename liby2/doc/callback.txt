Y2Component callback implementation

Purpose

The callback mechanism is used to allow execution of
code parts in the WFM. This is mostly needed by UI code
if it wants to access the WFM environment, either for
variable access or for SCR access.


Implementation

Basis of the callback implementation is an extension of
the Y2Component interface.
The WFM component, being a client, also provides the
"evaluate()" member function normally used for servers
only. See y2wfm/src/Y2WFMComponent.cc

The YUIInterpreter now accepts WFM(<expr>) and SCR(<expr>) to pass
<expr> to WFM or SCR for evaluation

For this to happen, the YUIInterpreter (see libyui/src/YUIInterpreter.cc)
needs knowledge about the evaluate() function of the WFM component.
Normally, the YUIInterpreter doesn't know anything about components,
it's a baseclass to YUIQt (or YUINcurses) and used as a server from
the UI component (Y2QtComponent.cc, Y2NcursesComponent.cc)

So a mechanism for passing the Component to the Interpreter is needed.

This is done by passing a pointer to the callback component (Y2WFMComponent
is the callback component for Y2QtComponent since Y2WFMComponent->evaluate()
is defined) when creating YUIQt().


For plugin components, another level of indirection is introduced. Such
components have two component interfaces, one "dummy" for the plugin
mechanism before the actual plugin is loaded and one "real" after the
plugin is loaded. The callback information must be passed between both
components. This is done inside Y2PluginComponent.
